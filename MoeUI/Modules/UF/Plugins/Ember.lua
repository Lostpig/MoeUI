if(select(2, UnitClass('player')) ~= 'WARLOCK') then return endlocal addon, ns = ...local oUF = ns.oUFlocal SPELL_POWER_BURNING_EMBERS = SPELL_POWER_BURNING_EMBERSlocal MAX_POWER_PER_EMBER = MAX_POWER_PER_EMBERlocal color = {0.457, 0.605, 0.445, 0.734}local function Update(self,event,unit,powerType)	if unit ~= 'player' or (powerType and powerType ~= 'BURNING_EMBERS') then return end	local ember = self.EmberBar		if ember.PreUpdate then ember:PreUpdate(unit) end		local embernum = UnitPower(unit, SPELL_POWER_BURNING_EMBERS,true)	local embermax = UnitPowerMax(unit,SPELL_POWER_BURNING_EMBERS,true)		local emberpon = floor(embernum/MAX_POWER_PER_EMBER)	for index = 1, UnitPowerMax(unit,SPELL_POWER_BURNING_EMBERS) do		if emberpon >= index then			ember[index]:SetValue(MAX_POWER_PER_EMBER)		elseif index == (emberpon+1) then			local value = embernum - (emberpon*MAX_POWER_PER_EMBER)			ember[index]:SetValue(value)		else			ember[index]:SetValue(0)		end	end		if(ember.PostUpdate) then		return ember:PostUpdate(unit)	endendlocal Path = function(self, ...)	return (self.EmberBar.Override or Update) (self, ...)endlocal newpoint = function(bar)	local point = CreateFrame("StatusBar", nil, bar)    local texture = bar[1]:GetStatusBarTexture()	point:SetHeight(bar[1]:GetHeight())	point:SetStatusBarTexture(texture:GetTexture())		point:SetStatusBarColor(bar[1]:GetStatusBarColor())	point:GetStatusBarTexture():SetHorizTile(texture:GetHorizTile())	return pointendlocal maxchange = function(self,event,unit,powerType)	if unit ~= 'player' or (powerType and powerType ~= 'BURNING_EMBERS') then return end	local embermax = UnitPowerMax('player', SPELL_POWER_BURNING_EMBERS)	local ember = self.EmberBar		for i = 1, embermax do		if not ember[i] then 			ember[i] = newpoint(ember)			ember[i]:SetPoint("LEFT",ember[i-1],"RIGHT",1,0)		end		ember[i]:SetWidth((ember:GetWidth() - (embermax - 1))/embermax)	end		for j = embermax + 1, 10 do		if ember[i] then ember[i]:Hide() end	end		Path(self,event,'player')endlocal isvisable = function(self,...)	local ptt = GetSpecialization()	local ember = self.EmberBar	if(ptt and ptt == 3) then -- player has balance spec		ember:Show()	else		ember:Hide()	endendlocal function Enable(self,unit)	local ember = self.EmberBar		if (ember and unit == 'player') then		self:RegisterEvent('UNIT_POWER', Path)		self:RegisterEvent('UNIT_DISPLAYPOWER', Path)		self:RegisterEvent('PLAYER_TALENT_UPDATE',isvisable)		self:RegisterEvent('UNIT_MAXPOWER',maxchange)		isvisable(self,'PLAYER_TALENT_UPDATE')		maxchange(self,'UNIT_MAXPOWER','player','BURNING_EMBERS')		ember.color = color		return true	endendlocal function Disable(self,unit)	local ember = self.EmberBar		if ember then		self:UnregisterEvent('UNIT_POWER', Path)		self:UnregisterEvent('UNIT_DISPLAYPOWER', Path)	endendoUF:AddElement('EmberBar', Path, Enable, Disable)